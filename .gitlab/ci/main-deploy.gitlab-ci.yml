stages:
  - lint
  - build
  - release
  - deploy

default:
  image: node:20
  before_script:
    - corepack enable pnpm

cache:
  paths:
    - node_modules/
    - dist
    - deploy

lint-job:
  stage: lint
  script:
    - pnpm install --prod --frozen-lockfile
    - pnpm lint
  artifacts:
    paths:
      - node_modules/

build-job:
  stage: build
  needs:
    - lint-job
  script:
    - pnpm run build
  artifacts:
    paths:
      - dist/

release-job:
  stage: release
  needs:
    - build-job
  before_script:
    - echo "Start release"
  script:
    - tar czvf frontend-${VERSION}.tar.gz dist deploy
  artifacts:
    paths:
      - frontend-${VERSION}.tar.gz

deploy-job:
  stage: deploy
  image: ubuntu:22.04
  needs:
    - release-job
  before_script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config
    - ssh ${DEV_USER}@${DEV_HOST} "export "VERSION=${VERSION}""
  script:
    - scp frontend-${VERSION}.tar.gz ${DEV_USER}@${DEV_HOST}:/home/slincnik/Testfront


workflow:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
